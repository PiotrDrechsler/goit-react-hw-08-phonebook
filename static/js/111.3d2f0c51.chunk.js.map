{"version":3,"file":"static/js/111.3d2f0c51.chunk.js","mappings":"4SAIaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,kBAAMC,SAba,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACN,EAG+BC,aAAa,MAA3C,WACE,UAAC,KAAD,CAAaC,GAAG,QAAhB,WACE,SAAC,IAAD,qBACA,SAAC,EAAAC,EAAD,CAAOC,KAAK,QAAQC,KAAK,cAE3B,UAAC,KAAD,CAAaH,GAAG,WAAhB,WACE,SAAC,IAAD,wBACA,SAAC,EAAAC,EAAD,CAAOC,KAAK,WAAWC,KAAK,iBAE9B,SAAC,IAAD,CAAQC,GAAI,EAAGC,YAAY,OAAOH,KAAK,SAAvC,sBAKL,EC9Bc,SAASI,IACtB,OACE,UAAC,IAAD,CAAWC,KAAK,MAAMC,eAAa,EAAnC,WACE,SAACC,EAAA,EAAD,WACE,wCAEF,UAAC,KAAD,CAAKC,QAAQ,IAAIC,GAAG,WAAWC,UAAU,KAAKR,GAAG,KAAjD,WACE,SAAC,IAAD,CAASS,KAAK,KAAKC,GAAG,IAAtB,8CAGA,SAAC7B,EAAD,SAIP,C,2JCTG8B,GAAUC,EAAAA,EAAAA,IAAW,SAAkBC,EAAOC,GAChD,IAAMC,GAASC,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAtB,EAAQC,WAAR,aACA,OAAuBC,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,IADwB,QAAC,QAGvBP,IAAAA,EACAK,WAAWG,EAAAA,EAAAA,IAAG,iBAAkBT,EAAMM,YACnCD,GALmB,IAMtBK,MAAOR,IAGZ,IACDJ,EAAQa,YAAc,S,2KCblBC,GAAYb,EAAAA,EAAAA,IAAW,SAAoBC,EAAOC,GACpD,OAA8CG,EAAAA,EAAAA,IAAiBJ,GAAvDM,EAAR,EAAQA,UAAWf,EAAnB,EAAmBA,cAAkBc,GAArC,YACMH,GAASC,EAAAA,EAAAA,IAAe,YAAaH,GAC3C,OAAuBO,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KADwB,QAAC,QAGvBP,IAAAA,EACAK,WAAWG,EAAAA,EAAAA,IAAG,mBAAoBH,IAC/BD,GALmB,IAMtBK,OAAO,kBACFR,GACAX,GAAiB,CAClBsB,QAAS,OACTC,cAAe,SACfC,WAAY,aAKrB,IACDH,EAAUD,YAAc,W","sources":["components/LoginForm/LoginForm.jsx","pages/Login.jsx","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/layout/dist/chunk-SRMZVY4F.mjs"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { FormControl, FormLabel, Input, Button } from '@chakra-ui/react';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormControl id=\"email\">\n        <FormLabel>Email</FormLabel>\n        <Input type=\"email\" name=\"email\" />\n      </FormControl>\n      <FormControl id=\"password\">\n        <FormLabel>Password</FormLabel>\n        <Input type=\"password\" name=\"password\" />\n      </FormControl>\n      <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n        Log In\n      </Button>\n    </form>\n  );\n};\n","import { Container, Box, Heading } from '@chakra-ui/react';\nimport { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <Container maxW=\"2xl\" centerContent>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <Box padding=\"6\" bg=\"gray.100\" boxShadow=\"lg\" mt=\"10\">\n        <Heading size=\"xl\" mb=\"8\">\n          Login to your Phonebook account\n        </Heading>\n        <LoginForm />\n      </Box>\n    </Container>\n  );\n}\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","// src/container.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Container = forwardRef(function Container2(props, ref) {\n  const { className, centerContent, ...rest } = omitThemingProps(props);\n  const styles = useStyleConfig(\"Container\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-container\", className),\n      ...rest,\n      __css: {\n        ...styles,\n        ...centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }\n      }\n    }\n  );\n});\nContainer.displayName = \"Container\";\n\nexport {\n  Container\n};\n"],"names":["LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","id","I","type","name","mt","colorScheme","Login","maxW","centerContent","Helmet","padding","bg","boxShadow","size","mb","Heading","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","jsx","chakra","cx","__css","displayName","Container","display","flexDirection","alignItems"],"sourceRoot":""}