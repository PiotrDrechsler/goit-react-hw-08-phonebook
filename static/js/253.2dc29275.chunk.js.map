{"version":3,"file":"static/js/253.2dc29275.chunk.js","mappings":"4NAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAqB,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EAC1BC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,E,oBC2DpC,EAzDoB,WAClB,IAAML,GAAWM,EAAAA,EAAAA,IAAYR,GACvBS,GAAWC,EAAAA,EAAAA,MAyBjB,OACE,kBAAMC,SAxBiB,SAAAC,GACvBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,OACTC,EAAOJ,EAAEG,OAAOC,KAAKC,MACrBC,EAAQN,EAAEG,OAAOG,MAAMD,MACvBE,EAAgBjB,EAASkB,MAC7B,SAAAC,GAAO,OAAIA,EAAQL,KAAKM,gBAAkBN,EAAKM,aAAxC,IAGHC,EAAa,CACjBP,KAAMA,EACNE,MAAOA,GAGJC,EAIHK,MAAM,GAAD,OAAIR,EAAJ,mCAHLP,GAASgB,EAAAA,EAAAA,IAAWF,IACpBT,EAAKY,QAIR,EAGC,WACE,mBAAOC,QAAQ,OAAf,kBAEE,kBACEC,aAAa,MACbC,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNC,YAAY,gBACZC,UAAQ,QAGZ,mBAAON,QAAQ,QAAf,oBAEE,kBACEC,aAAa,MACbC,KAAK,MACLb,KAAK,QACLc,QAAQ,yFACRC,MAAM,+FACNC,YAAY,mBACZC,UAAQ,QAGZ,mBAAQJ,KAAK,SAAb,2BAGL,ECFD,EAhDoB,WAClB,IAAM3B,GAAWM,EAAAA,EAAAA,IAAYR,GACvBK,GAASG,EAAAA,EAAAA,IAAYJ,GACrBG,GAAYC,EAAAA,EAAAA,IAAYF,GACxBG,GAAWC,EAAAA,EAAAA,MAEXwB,EAAmBhC,EACtBG,QAAO,SAAAgB,GACN,IAAMc,IAAYd,EAAQL,MACtBK,EAAQL,KAAKM,cAAcc,SAAS/B,EAAOiB,eAEzCe,IAAahB,EAAQH,OACvBG,EAAQH,MAAMI,cAAcc,SAAS/B,EAAOiB,eAEhD,OAAOa,GAAaE,CACrB,IACAC,MAAK,SAACC,EAAGC,GACR,OAAID,EAAEvB,KAAKM,cAAgBkB,EAAExB,KAAKM,eAAuB,EACrDiB,EAAEvB,KAAKM,cAAgBkB,EAAExB,KAAKM,cAAsB,EACjD,CACR,IAMH,OAAOf,GACL,yDACE2B,EAAiBO,OAAS,GAC5B,+BACE,wBACGP,EAAiBQ,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAI3B,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACjC,OACE,0BACGF,EADH,KACWE,GACT,mBAAQW,KAAK,SAASe,QAAS,kBAbtBC,EAayCF,OAZ5DlC,GAASqC,EAAAA,EAAAA,IAAcD,IADJ,IAAAA,CAasB,EAA/B,sBAFOF,EAOZ,SAIL,uCAEH,E,UCpCD,EAhBe,WACb,IAAMlC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iCACE,sEACA,kBAAOmB,KAAK,OAAOb,KAAK,SAAS+B,SARpB,SAAAnC,GACf,IAAMK,EAAQL,EAAEG,OAAOE,MAAMK,cAC7Bb,GAASuC,EAAAA,EAAAA,GAAU/B,GACpB,MAQF,ECeD,EAtBY,WACV,IAAMR,GAAWC,EAAAA,EAAAA,MACXH,GAAYC,EAAAA,EAAAA,IAAYF,GAM9B,OAJA2C,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAE,CAACzC,KAGF,4BACE,SAAC0C,EAAA,EAAD,WACE,yCAEF,SAAC,EAAD,KACA,sCACA,yBAAM5C,GAAa,4BACnB,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = e.target.name.value;\n    const phone = e.target.phone.value;\n    const nameOnTheList = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const newContact = {\n      name: name,\n      phone: phone,\n    };\n\n    if (!nameOnTheList) {\n      dispatch(addContact(newContact));\n      form.reset();\n    } else {\n      alert(`${name} is in use. Try another name.`);\n    }\n  };\n\n  return (\n    <form onSubmit={handleAddContact}>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"e.g. John Doe\"\n          required\n        />\n      </label>\n      <label htmlFor=\"phone\">\n        Number\n        <input\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"e.g. 123-456-789\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  selectStatusFilter,\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectStatusFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts\n    .filter(contact => {\n      const nameMatch = contact.name\n        ? contact.name.toLowerCase().includes(filter.toLowerCase())\n        : false;\n      const phoneMatch = contact.phone\n        ? contact.phone.toLowerCase().includes(filter.toLowerCase())\n        : false;\n      return nameMatch || phoneMatch;\n    })\n    .sort((a, b) => {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n      if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n      return 0;\n    });\n\n  const handleDelete = idToDelete => {\n    dispatch(deleteContact(idToDelete));\n  };\n\n  return isLoading ? (\n    <p>List is Loading! Please wait.</p>\n  ) : filteredContacts.length > 0 ? (\n    <>\n      <ul>\n        {filteredContacts.map(({ id, name, phone }) => {\n          return (\n            <li key={id}>\n              {name}: {phone}\n              <button type=\"submit\" onClick={() => handleDelete(id)}>\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  ) : (\n    <p>No contacts.</p>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/contacts/filtersSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <label>Find contacts by name or phone number</label>\n      <input type=\"text\" name=\"filter\" onChange={onChange} />\n    </>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <h1>Phonebook</h1>\n      </Helmet>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","useSelector","dispatch","useDispatch","onSubmit","e","preventDefault","form","target","name","value","phone","nameOnTheList","some","contact","toLowerCase","newContact","alert","addContact","reset","htmlFor","autoComplete","type","pattern","title","placeholder","required","filteredContacts","nameMatch","includes","phoneMatch","sort","a","b","length","map","id","onClick","idToDelete","deleteContact","onChange","setFilter","useEffect","fetchContacts","Helmet"],"sourceRoot":""}