{"version":3,"file":"static/js/267.b7d8dbdb.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","../node_modules/@chakra-ui/button/dist/chunk-3HSDMH4Y.mjs","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectStatusFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { FormControl, FormLabel, Input, Button, Flex } from '@chakra-ui/react';\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAddContact = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    const nameOnTheList = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    if (!nameOnTheList) {\n      dispatch(addContact(newContact));\n      form.reset();\n    } else {\n      alert(`${name} is in use. Try another name.`);\n    }\n  };\n\n  return (\n    <Flex direction=\"column\" align=\"center\" m=\"4\">\n      <FormControl as=\"form\" onSubmit={handleAddContact}>\n        <FormLabel htmlFor=\"name\">Name</FormLabel>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"e.g. John Doe\"\n          required\n          mb=\"4\"\n        />\n        <FormLabel htmlFor=\"number\">Number</FormLabel>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"e.g. 123-456-789\"\n          required\n          mb=\"4\"\n        />\n        <Button type=\"submit\" bg=\"blue.500\" color=\"white\">\n          Add contact\n        </Button>\n      </FormControl>\n    </Flex>\n  );\n};\n\nexport default ContactForm;\n","import {\n  Button\n} from \"./chunk-NAA7TEES.mjs\";\n\n// src/icon-button.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar IconButton = forwardRef(\n  (props, ref) => {\n    const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n    const element = icon || children;\n    const _children = isValidElement(element) ? cloneElement(element, {\n      \"aria-hidden\": true,\n      focusable: false\n    }) : null;\n    return /* @__PURE__ */ jsx(\n      Button,\n      {\n        padding: \"0\",\n        borderRadius: isRound ? \"full\" : void 0,\n        ref,\n        \"aria-label\": ariaLabel,\n        ...rest,\n        children: _children\n      }\n    );\n  }\n);\nIconButton.displayName = \"IconButton\";\n\nexport {\n  IconButton\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Flex, Box, Text, IconButton, CloseButton } from '@chakra-ui/react';\nimport {\n  selectStatusFilter,\n  selectContacts,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectStatusFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => dispatch(deleteContact(id));\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {isLoading ? (\n        <Text>Loading...</Text>\n      ) : (\n        <Flex\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          mt=\"5\"\n        >\n          {filteredContacts.length > 0 ? (\n            filteredContacts.map(({ id, name, number }) => (\n              <Box\n                key={id}\n                w={{ base: '80vw', sm: '50vw', md: '30vw', lg: '20vw' }}\n                borderWidth=\"1px\"\n                borderRadius=\"lg\"\n                overflow=\"hidden\"\n                my=\"2\"\n              >\n                <Flex alignItems=\"center\" justifyContent=\"space-between\" p=\"2\">\n                  <Text>{name}</Text>\n                  <IconButton\n                    icon={<CloseButton />}\n                    onClick={() => handleDeleteContact(id)}\n                  />\n                </Flex>\n                <Box p=\"2\">\n                  <Text>{number}</Text>\n                </Box>\n              </Box>\n            ))\n          ) : (\n            <Text>No contacts found</Text>\n          )}\n        </Flex>\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Input, FormControl, FormLabel } from '@chakra-ui/react';\n\nimport { setFilter } from 'redux/contacts/filtersSlice';\nimport { selectStatusFilter } from 'redux/contacts/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const value = e.target.value.toLowerCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <FormControl id=\"filter\">\n      <FormLabel>Find contacts by name</FormLabel>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={useSelector(selectStatusFilter)}\n        onChange={onChange}\n      />\n    </FormControl>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Helmet>\n        <h1>Phonebook</h1>\n      </Helmet>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <div>{isLoading && 'Request in progress...'}</div>\n      {isLoading ? null : <Filter />}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n"],"names":["selectContacts","state","contacts","items","selectStatusFilter","filter","selectIsLoading","isLoading","useSelector","dispatch","useDispatch","direction","align","m","as","onSubmit","e","preventDefault","form","target","name","value","number","nameOnTheList","some","contact","toLowerCase","newContact","alert","addContact","reset","htmlFor","I","type","pattern","title","placeholder","required","mb","bg","color","IconButton","forwardRef","props","ref","icon","children","isRound","ariaLabel","rest","element","_children","isValidElement","cloneElement","focusable","jsx","Button","padding","borderRadius","displayName","filteredContacts","includes","flexDirection","alignItems","justifyContent","mt","length","map","id","w","base","sm","md","lg","borderWidth","overflow","my","p","onClick","deleteContact","handleDeleteContact","onChange","setFilter","useEffect","fetchContacts","Helmet"],"sourceRoot":""}