"use strict";(self.webpackChunkgoit_react_hw_08_phonebook=self.webpackChunkgoit_react_hw_08_phonebook||[]).push([[253],{1253:function(e,n,t){t.r(n),t.d(n,{default:function(){return f}});var r=t(2791),a=t(9434),o=t(4270),s=function(e){return e.contacts.items},i=function(e){return e.filter},c=function(e){return e.contacts.isLoading},u=t(3634),l=t(3329),h=function(){var e=(0,a.v9)(s),n=(0,a.I0)();return(0,l.jsxs)("form",{onSubmit:function(t){t.preventDefault();var r=t.target,a=t.target.name.value,o=t.target.phone.value,s=e.some((function(e){return e.name.toLowerCase()===a.toLowerCase()})),i={name:a,phone:o};s?alert("".concat(a," is in use. Try another name.")):(n((0,u.uK)(i)),r.reset())},children:[(0,l.jsxs)("label",{htmlFor:"name",children:["Name",(0,l.jsx)("input",{autoComplete:"off",type:"text",name:"name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",placeholder:"e.g. John Doe",required:!0})]}),(0,l.jsxs)("label",{htmlFor:"phone",children:["Number",(0,l.jsx)("input",{autoComplete:"off",type:"tel",name:"phone",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",placeholder:"e.g. 123-456-789",required:!0})]}),(0,l.jsx)("button",{type:"submit",children:"Add contact"})]})},d=function(){var e=(0,a.v9)(s),n=(0,a.v9)(i),t=(0,a.v9)(c),r=(0,a.I0)(),o=e.filter((function(e){var t=!!e.name&&e.name.toLowerCase().includes(n.toLowerCase()),r=!!e.phone&&e.phone.toLowerCase().includes(n.toLowerCase());return t||r})).sort((function(e,n){return e.name.toLowerCase()<n.name.toLowerCase()?-1:e.name.toLowerCase()>n.name.toLowerCase()?1:0}));return t?(0,l.jsx)("p",{children:"List is Loading! Please wait."}):o.length>0?(0,l.jsx)(l.Fragment,{children:(0,l.jsx)("ul",{children:o.map((function(e){var n=e.id,t=e.name,a=e.phone;return(0,l.jsxs)("li",{children:[t,": ",a,(0,l.jsx)("button",{type:"submit",onClick:function(){return e=n,void r((0,u.GK)(e));var e},children:"Delete"})]},n)}))})}):(0,l.jsx)("p",{children:"No contacts."})},m=t(3165),p=function(){var e=(0,a.I0)();return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("label",{children:"Find contacts by name or phone number"}),(0,l.jsx)("input",{type:"text",name:"filter",onChange:function(n){var t=n.target.value.toLowerCase();e((0,m.T)(t))}})]})},f=function(){var e=(0,a.I0)(),n=(0,a.v9)(c);return(0,r.useEffect)((function(){e((0,u.yF)())}),[e]),(0,l.jsxs)("div",{children:[(0,l.jsx)(o.q,{children:(0,l.jsx)("h1",{children:"Phonebook"})}),(0,l.jsx)(h,{}),(0,l.jsx)("h2",{children:"Contacts"}),(0,l.jsx)("div",{children:n&&"Request in progress..."}),(0,l.jsx)(p,{}),(0,l.jsx)(d,{})]})}}}]);
//# sourceMappingURL=253.2dc29275.chunk.js.map